<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>