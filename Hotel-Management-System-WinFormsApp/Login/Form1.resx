<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>