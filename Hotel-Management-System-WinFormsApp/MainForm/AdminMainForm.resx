<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lcoc+S9COOMqWp1n4QAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>35</value>
  </metadata>
</root>